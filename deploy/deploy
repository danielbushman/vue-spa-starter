#!/bin/bash
# SPA deployments

# defaults
ENVIRONMENT="dev"
LOCAL_BRANCH=`git rev-parse --abbrev-ref HEAD`

while test $# -gt 0; do
    case "$1" in
        -h|--help)
            echo "Deploy Vue SPA frontend"
            echo " "
            echo "options:"
            echo "-h, --help                 show this help"
            echo "--env=ENVIRONMENT          specify the target environment (deault: dev)  [string]"
            exit 0
            ;;
        --env=*)
      ENVIRONMENT=`echo $1 | sed -e 's/^[^=]*=//g'`
      shift
            ;;
        *)
      break
      ;;
    esac
done

read -p "Deploy to [heroku-$ENVIRONMENT] from [$LOCAL_BRANCH]? (y/n) " CONT
echo
if [[ "$CONT" != "y" ]]; then
  exit 1
fi

echo
echo "Getting the dist hash of the previous build"
PREV_HASH=$( tail -n 1 $ENVIRONMENT-dist-hash-history.log )
echo "Previous hash $PREV_HASH"
echo

FAILURE=true
case $ENVIRONMENT in
  dev|qa)
    echo
    echo "Building for $ENVIRONMENT"
    [[ "$ENVIRONMENT" != "dev" ]] && arg="--env=$ENVIRONMENT" || arg=""
    echo "npm run build $arg"
    if npm run build "$arg"; then
      FAILURE=false
      echo "Build success ðŸ˜Ž"
    else
      echo "Build failed ðŸ˜±"
    fi
    ;;
  *)
    echo
    echo "Invalid env provided: $ENVIRONMENT"
    exit 1
    ;;
esac

if $FAILURE; then

  echo
  echo "I'm not going to deploy until you fix the build, Dude. Sorry. ðŸ™„"
  echo

else

  echo
  echo "Adding the dist hash to the history"
  ls ../dist >> $ENVIRONMENT-dist-hash-history.log
  HASH=$( tail -n 1 $ENVIRONMENT-dist-hash-history.log )
  echo
  echo "Previous hash   $PREV_HASH"
  echo "New hash        $HASH"
  echo

  if [ "$PREV_HASH" != "$HASH" ] ; then
    # Keep awscli updated
    echo
    echo "Keeping awscli updated"
    echo
    pip install --upgrade --user awscli

    echo
    echo "Copying files to S3"
    echo
    aws s3 cp ../dist/$HASH s3://s4c-cdn/spa/$HASH --recursive

    echo
    echo "Sync the build to Github"
    echo
    git add ../ --all
    COMMIT_MESSAGE="[$ENVIRONMENT build] $HASH"
    git commit -m "$COMMIT_MESSAGE"
    git push origin "$LOCAL_BRANCH"

    echo
    echo "Deploying to heroku"
    echo
    git push -f heroku-$ENVIRONMENT $LOCAL_BRANCH:master

    TO_DELETE=s3://s4c-cdn/spa/$PREV_HASH
    if [ "$TO_DELETE" != "s3://s4c-cdn/spa/" ]; then
      echo
      echo "removing previous hash folder from S3"
      echo
      aws s3 rm "$TO_DELETE" --recursive
    fi
  else
    echo
    echo "No new hash in /dist ðŸ¤”"
    echo
    echo "Nothing deployed!!!!! ðŸ˜¡"
    echo
  fi

fi
